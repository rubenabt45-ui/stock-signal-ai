
import React, { useState } from 'react';
import { Brain, Zap, TrendingUp, ArrowRight, Lock, Clock, Crown } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useTranslationWithFallback } from '@/hooks/useTranslationWithFallback';
import { useNavigate } from 'react-router-dom';
import { useDailyMessages } from '@/hooks/useDailyMessages';
import { useSubscription } from '@/hooks/useSubscription';

export const TradingChatDemo: React.FC = () => {
  const { t } = useTranslationWithFallback();
  const navigate = useNavigate();
  const { isPro } = useSubscription();
  const { 
    canUseAnalysis, 
    analysisCount, 
    maxAnalysisPerDay, 
    remainingAnalysis, 
    recordAnalysisUsage 
  } = useDailyMessages();
  const [showDemo, setShowDemo] = useState(false);

  // Sample demo analysis
  const demoAnalysis = {
    symbol: "AAPL",
    analysis: "Based on technical indicators, AAPL shows a bullish trend with strong support at $150. The RSI indicates it's not overbought, and volume patterns suggest continued momentum. Consider entry points near support levels with a target of $160-165.",
    confidence: "85%",
    timeframe: "1-2 weeks",
    signals: [
      { type: "Bullish", indicator: "Moving Average Crossover", strength: "Strong" },
      { type: "Support", indicator: "Price Level", value: "$150" },
      { type: "Target", indicator: "Resistance", value: "$160-165" }
    ]
  };

  const handleViewDemo = async () => {
    if (!canUseAnalysis && !isPro) {
      // Show upgrade message if daily limit reached
      return;
    }
    
    if (!isPro) {
      // Record usage for free users
      await recordAnalysisUsage();
    }
    
    setShowDemo(true);
  };

  const handleUpgrade = () => {
    navigate('/pricing');
  };

  if (showDemo) {
    return (
      <div className="min-h-screen bg-gray-900 p-4">
        <div className="max-w-4xl mx-auto space-y-6">
          {/* Demo Header */}
          <div className="text-center space-y-4">
            <Badge className="bg-blue-600 text-white px-4 py-2">
              {isPro ? 'Pro Mode' : 'Demo Mode'}
            </Badge>
            <h1 className="text-3xl font-bold text-white">StrategyAI Analysis {isPro ? '' : 'Demo'}</h1>
            <p className="text-gray-400">
              {isPro 
                ? 'Full AI-powered analysis with unlimited access'
                : 'Sample analysis showing StrategyAI\'s capabilities'
              }
            </p>
          </div>

          {/* Demo Analysis Card */}
          <Card className="bg-gray-800 border-gray-700">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="text-white flex items-center">
                  <Brain className="h-6 w-6 mr-2 text-blue-400" />
                  AI Analysis for {demoAnalysis.symbol}
                </CardTitle>
                <Badge variant="outline" className="text-green-400 border-green-400">
                  {demoAnalysis.confidence} Confidence
                </Badge>
              </div>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-gray-300 leading-relaxed">{demoAnalysis.analysis}</p>
              
              <div className="grid md:grid-cols-3 gap-4">
                {demoAnalysis.signals.map((signal, index) => (
                  <div key={index} className="bg-gray-700/50 rounded-lg p-3">
                    <div className="flex items-center justify-between mb-2">
                      <span className="text-sm font-medium text-gray-300">{signal.indicator}</span>
                      {signal.type === 'Bullish' && <TrendingUp className="h-4 w-4 text-green-400" />}
                      {signal.type === 'Support' && <Zap className="h-4 w-4 text-blue-400" />}
                      {signal.type === 'Target' && <ArrowRight className="h-4 w-4 text-orange-400" />}
                    </div>
                    <div className="text-white font-semibold">
                      {signal.value || signal.strength}
                    </div>
                    <div className="text-xs text-gray-400 mt-1">{signal.type}</div>
                  </div>
                ))}
              </div>

              <div className="flex items-center justify-between text-sm text-gray-400 pt-4 border-t border-gray-700">
                <span>Timeframe: {demoAnalysis.timeframe}</span>
                <span>Generated by StrategyAI</span>
              </div>
            </CardContent>
          </Card>

          {/* Upgrade Call-to-Action for Free Users */}
          {!isPro && (
            <Card className="bg-gradient-to-r from-orange-600/20 to-blue-600/20 border-orange-500/30">
              <CardContent className="p-6 text-center space-y-4">
                <Lock className="h-12 w-12 text-orange-400 mx-auto" />
                <h3 className="text-xl font-bold text-white">Want Real-Time Analysis?</h3>
                <p className="text-gray-300">
                  This was just a demo. You have {remainingAnalysis} analysis remaining today. 
                  Upgrade to Pro for unlimited AI analysis of any symbol, real-time data, and personalized insights.
                </p>
                <div className="bg-gray-800/50 rounded-lg p-4 mb-4">
                  <div className="flex items-center justify-center space-x-2 text-yellow-400">
                    <Clock className="h-4 w-4" />
                    <span className="text-sm">
                      {remainingAnalysis > 0 
                        ? `${remainingAnalysis} of ${maxAnalysisPerDay} analyses remaining today`
                        : 'Daily limit reached. Resets at midnight.'
                      }
                    </span>
                  </div>
                </div>
                <div className="flex flex-col sm:flex-row gap-3 justify-center">
                  <Button 
                    onClick={handleUpgrade}
                    className="bg-orange-600 hover:bg-orange-700 text-white"
                  >
                    <Crown className="h-4 w-4 mr-2" />
                    Unlock Unlimited Analysis
                    <ArrowRight className="h-4 w-4 ml-2" />
                  </Button>
                  <Button 
                    variant="outline"
                    onClick={() => navigate('/pricing')}
                    className="border-gray-600 text-gray-300 hover:bg-gray-700"
                  >
                    See All Pro Features
                  </Button>
                </div>
              </CardContent>
            </Card>
          )}

          {/* Back Button */}
          <div className="text-center">
            <Button 
              variant="ghost"
              onClick={() => setShowDemo(false)}
              className="text-gray-400 hover:text-white"
            >
              ← Back to StrategyAI Options
            </Button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-900 flex items-center justify-center p-4">
      <Card className="w-full max-w-2xl bg-gray-800 border-gray-700">
        <CardContent className="p-8 text-center space-y-6">
          {/* AI Icon */}
          <div className="flex justify-center">
            <div className="w-20 h-20 bg-blue-600/20 rounded-full flex items-center justify-center">
              <Brain className="h-10 w-10 text-blue-400" />
            </div>
          </div>

          {/* Title */}
          <div className="space-y-2">
            <h2 className="text-3xl font-bold text-white">Experience StrategyAI</h2>
            <p className="text-gray-400">
              See how our AI analyzes market data and provides trading insights
            </p>
          </div>

          {/* Usage Status for Free Users */}
          {!isPro && (
            <div className="bg-gray-700/50 rounded-lg p-4">
              <div className="flex items-center justify-center space-x-2 mb-2">
                <Clock className="h-4 w-4 text-blue-400" />
                <span className="text-sm font-medium text-white">Daily Analysis Limit</span>
              </div>
              {canUseAnalysis ? (
                <p className="text-green-400 text-sm">
                  ✓ {remainingAnalysis} of {maxAnalysisPerDay} analyses remaining today
                </p>
              ) : (
                <div className="text-center">
                  <p className="text-orange-400 text-sm">
                    Daily limit reached ({analysisCount}/{maxAnalysisPerDay})
                  </p>
                  <p className="text-gray-400 text-xs mt-1">
                    Resets at midnight. Upgrade for unlimited access.
                  </p>
                </div>
              )}
            </div>
          )}

          {/* Demo Options */}
          <div className="space-y-4">
            <Card className="bg-gray-700/50 border-gray-600">
              <CardContent className="p-4">
                <h3 className="text-white font-semibold mb-2">
                  {canUseAnalysis || isPro ? 'AI Analysis Demo' : 'Daily Limit Reached'}
                </h3>
                <p className="text-gray-300 text-sm mb-4">
                  {canUseAnalysis || isPro 
                    ? 'View a sample AI analysis to understand StrategyAI\'s capabilities'
                    : 'You\'ve used your 3 free daily analyses. Upgrade for unlimited access.'
                  }
                </p>
                <Button 
                  onClick={canUseAnalysis || isPro ? handleViewDemo : handleUpgrade}
                  className={`w-full ${
                    canUseAnalysis || isPro 
                      ? 'bg-blue-600 hover:bg-blue-700' 
                      : 'bg-orange-600 hover:bg-orange-700'
                  } text-white`}
                  disabled={!canUseAnalysis && !isPro}
                >
                  {canUseAnalysis || isPro ? (
                    <>
                      <Brain className="h-4 w-4 mr-2" />
                      View Sample Analysis
                    </>
                  ) : (
                    <>
                      <Crown className="h-4 w-4 mr-2" />
                      Upgrade for Unlimited Access
                    </>
                  )}
                </Button>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-r from-orange-600/20 to-blue-600/20 border-orange-500/30">
              <CardContent className="p-4">
                <h3 className="text-white font-semibold mb-2">Unlock Full StrategyAI</h3>
                <ul className="text-gray-300 text-sm space-y-1 mb-4 text-left">
                  <li>• Unlimited AI analysis for any symbol (vs 3/day free)</li>
                  <li>• Real-time market data integration</li>
                  <li>• Personalized trading recommendations</li>
                  <li>• Advanced pattern recognition</li>
                  <li>• Complete chat history</li>
                </ul>
                <Button 
                  onClick={handleUpgrade}
                  className="w-full bg-orange-600 hover:bg-orange-700 text-white"
                >
                  <Crown className="h-4 w-4 mr-2" />
                  Unlock Pro Features
                  <ArrowRight className="h-4 w-4 ml-2" />
                </Button>
              </CardContent>
            </Card>
          </div>

          {/* Pricing */}
          <div className="text-center pt-4 border-t border-gray-700">
            <div className="text-2xl font-bold text-white">
              {t('features.locked.pricing.monthly')}<span className="text-sm font-normal text-gray-400">{t('features.locked.pricing.period')}</span>
            </div>
            <p className="text-gray-400 text-sm">{t('common.cancelAnytime')}</p>
          </div>

          {/* Back Button */}
          <div className="pt-4">
            <Button 
              variant="outline"
              onClick={() => navigate('/dashboard')}
              className="border-gray-600 text-gray-300 hover:bg-gray-700"
            >
              {t('common.goBack')}
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
